def build_threat_report(df, ai_summary):
    lines = []

    lines.append("🔐 HavenAI Threat Analysis Report\n")
    lines.append("=" * 40 + "\n")

    # AI Summary Section
    lines.append("🧠 AI Log Summary:\n")
    lines.append(ai_summary)
    lines.append("\n")

    # Event Types
    if "event_type" in df.columns:
        lines.append("📊 Event Types:\n")
        for event, count in df["event_type"].value_counts().items():
            lines.append(f" - {event}: {count} occurrences")
        lines.append("\n")

    # Top Source IPs
    if "source_ip" in df.columns:
        lines.append("🌐 Top Source IPs:\n")
        for ip, count in df["source_ip"].value_counts().head(5).items():
            lines.append(f" - {ip}: {count} events")
        lines.append("\n")

    # Anomalies
    if "threat_score" in df.columns:
        anomalies = df[df["threat_score"] == "Anomalous"]
        lines.append("⚠️ Detected Anomalies:\n")
        if not anomalies.empty:
            lines.append(anomalies.head(5).to_string(index=False))
        else:
            lines.append(" - No anomalies detected.")
        lines.append("\n")

    lines.append("=" * 40 + "\n")
    lines.append("Generated by HavenAI — AI-Powered Log Analyzer\n")

    return "\n".join(lines).encode("utf-8")
